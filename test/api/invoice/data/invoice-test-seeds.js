const { v4: uuidv4 } = require('uuid');
const knex = require('../../../../src/db');

const seedAll = async () => {
  await knex('user').insert([
    {
      id: 9,
      email: 'testuser9@qvalia.se',
      password: 'testtest9',
      is_superadmin: false,
      name: 'TestAuto User 9',
      phone: '+467049851951',
      verified_at: new Date(),
      verified_mobile_at: new Date(),
      image_url: 'fb360de7-cde5-48d1-9c42-77171c7a7114.jpg',
      schedule_reminders: false,
      scheduled_reminder_notification_days: JSON.stringify([1]),
    },
    {
      id: 10,
      email: 'testuser10@qvalia.se',
      password: 'testtest10',
      is_superadmin: false,
      name: 'TestAuto User 10',
      phone: '+4670498519510',
      verified_at: new Date(),
      verified_mobile_at: new Date(),
      image_url: 'fb360de7-cde5-48d1-9c42-77171c7a7114.jpg',
      schedule_reminders: false,
      scheduled_reminder_notification_days: JSON.stringify([1]),
    },
  ]);

  await knex('usersupplierrole').insert([
    {
      user: 9,
      supplier: 1,
      id: 9,
      createdAt: new Date(),
      updatedAt: new Date(),
      role: 6,
    },
    {
      user: 10,
      supplier: 1,
      id: 10,
      createdAt: new Date(),
      updatedAt: new Date(),
      role: 7,
    },
  ]);

  await knex('incominginvoice').insert([
    {
      id: 50,
      uuid: uuidv4(),
      sender_data: JSON.stringify({
        organization_number: '123456-1111',
        country: 'SE',
      }),
      receiver_data: JSON.stringify({
        company_name: 'Test Automation Four AB',
        vat_number: null,
        organization_number: '123456-1114',
        reference: 'TestAuto4',
      }),
      document_id: 'AAA-111-QIP-45',
      currency: 'SEK',
      exchange_rate: 1,
      create_method: 'system',
      due_days: 30,
      due_date: '2021-03-31',
      supplier: 1,
      sent_at: '2021-03-31',
      subtotal: 500,
      vat_sum: 60,
      total: 560,
      cash_discount_percent: 0,
      bankaccount_data: JSON.stringify([{}]),
      credit_note: false,
      references: JSON.stringify([]),
      updatedAt: '2021-03-31',
      workflow_status: 'PendingSupplier',
      owned_by: null,
      share_token: 5,
      file_invoice: null,
      optional_attributes: JSON.stringify({}),
      other_dates: JSON.stringify([
        { type: 'delivery_date', value: new Date().toISOString() },
      ]),
      paid_at: null,
      reminder: false,
      previous_status: 'Incomplete',
      total_summary: JSON.stringify({
        vat_amount: 60,
        subtotal: 500,
        total: 560,
      }),
      payment_reference: null,
      process: null,
    },
    {
      id: 51,
      uuid: uuidv4(),
      sender_data: JSON.stringify({
        organization_number: '123456-1111',
        country: 'SE',
      }),
      receiver_data: JSON.stringify({
        company_name: 'Test Automation Four AB',
        vat_number: null,
        organization_number: '123456-1114',
        reference: 'TestAuto4',
      }),
      document_id: 'AAA-111-QIP-46',
      currency: 'SEK',
      exchange_rate: 1,
      create_method: 'system',
      due_days: 30,
      due_date: '2021-03-31',
      supplier: 1,
      sent_at: '2021-03-31',
      subtotal: 500,
      vat_sum: 60,
      total: 560,
      cash_discount_percent: 0,
      bankaccount_data: JSON.stringify([{}]),
      credit_note: false,
      references: JSON.stringify([]),
      updatedAt: '2021-03-31',
      workflow_status: 'PendingSupplier',
      owned_by: null,
      share_token: 5,
      file_invoice: null,
      optional_attributes: JSON.stringify({}),
      other_dates: JSON.stringify([
        { type: 'delivery_date', value: new Date().toISOString() },
      ]),
      paid_at: null,
      reminder: false,
      previous_status: 'Incomplete',
      total_summary: JSON.stringify({
        vat_amount: 60,
        subtotal: 500,
        total: 560,
      }),
      payment_reference: null,
      process: null,
    },
    {
      id: 52,
      uuid: uuidv4(),
      sender_data: JSON.stringify({
        organization_number: '123456-1111',
        country: 'SE',
      }),
      receiver_data: JSON.stringify({
        company_name: 'Test Automation Four AB',
        vat_number: null,
        organization_number: '123456-1114',
        reference: 'TestAuto4',
      }),
      document_id: 'AAA-111-QIP-47',
      currency: 'SEK',
      exchange_rate: 1,
      create_method: 'system',
      due_days: 30,
      due_date: '2021-03-31',
      supplier: 1,
      sent_at: '2021-03-31',
      subtotal: 500,
      vat_sum: 60,
      total: 560,
      cash_discount_percent: 0,
      bankaccount_data: JSON.stringify([{}]),
      credit_note: false,
      references: JSON.stringify([]),
      updatedAt: '2021-03-31',
      workflow_status: 'PendingSupplier',
      owned_by: null,
      share_token: 5,
      file_invoice: null,
      optional_attributes: JSON.stringify({}),
      other_dates: JSON.stringify([
        { type: 'delivery_date', value: new Date().toISOString() },
      ]),
      paid_at: null,
      reminder: false,
      previous_status: 'Incomplete',
      total_summary: JSON.stringify({
        vat_amount: 60,
        subtotal: 500,
        total: 560,
      }),
      payment_reference: null,
      process: null,
    },
    {
      id: 53,
      uuid: uuidv4(),
      sender_data: JSON.stringify({
        organization_number: '123456-1211',
        company_name: 'Test Automation Four AB',
        country: 'SE',
      }),
      receiver_data: JSON.stringify({
        company_name: 'Test Automation Four AB',
        vat_number: null,
        organization_number: '123456-1114',
        reference: 'TestAuto4',
      }),
      document_id: 'AAA-111-QIP-71',
      currency: 'SEK',
      exchange_rate: 1,
      create_method: 'system',
      due_days: 30,
      due_date: '2021-03-31',
      supplier: 1,
      sent_at: '2021-03-31',
      subtotal: 500,
      vat_sum: 60,
      total: 560,
      cash_discount_percent: 0,
      bankaccount_data: JSON.stringify([{}]),
      credit_note: false,
      references: JSON.stringify([]),
      updatedAt: '2021-03-31',
      workflow_status: 'PendingSupplier',
      owned_by: null,
      share_token: 5,
      file_invoice: null,
      optional_attributes: JSON.stringify({}),
      other_dates: JSON.stringify([
        { type: 'delivery_date', value: new Date().toISOString() },
      ]),
      paid_at: null,
      reminder: false,
      previous_status: 'Incomplete',
      total_summary: JSON.stringify({
        vat_amount: 60,
        subtotal: 500,
        total: 560,
      }),
      payment_reference: null,
      process: null,
    },
  ]);

  await knex('workflow_role').insert([
    {
      id: 6,
      name: 'parent workflow role',
      role_type: 2,
      supplier: 1,
      parent: 0,
      createdAt: new Date(),
      updatedAt: new Date(),
      active: true,
      sign_role: true,
    },
    {
      id: 7,
      name: 'child workflow role',
      role_type: 2,
      supplier: 1,
      parent: 6,
      createdAt: new Date(),
      updatedAt: new Date(),
      active: true,
      sign_role: false,
    },
  ]);

  await knex('user_workflow_role').insert([
    {
      id: 3,
      user: 9,
      workflow_role: 6,
      active: true,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      id: 4,
      user: 10,
      workflow_role: 7,
      active: true,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
  ]);

  await knex('invoice_workflow').insert([
    {
      id: 3,
      invoice: 50,
      workflow_role: null,
      assigned_to: null,
      status: 'ToAssign',
      createdAt: new Date(),
      updatedAt: new Date(),
      supplier: 1,
    },
    {
      id: 4,
      invoice: 51,
      workflow_role: 6,
      assigned_to: 9,
      status: 'ToApprove',
      createdAt: new Date(),
      updatedAt: new Date(),
      supplier: 1,
    },
    {
      id: 5,
      invoice: 52,
      workflow_role: 6,
      assigned_to: 9,
      status: 'Cancelled',
      createdAt: new Date(),
      updatedAt: new Date(),
      supplier: 1,
    },
    {
      id: 6,
      invoice: 53,
      workflow_role: 2,
      assigned_to: 1,
      status: 'ToAssign',
      createdAt: new Date(),
      updatedAt: new Date(),
      supplier: 1,
    },
  ]);
};

const rollbackAll = async () => {
  await knex('invoice_workflow').del().whereIn('id', [3, 4, 5, 6]);
  await knex('user_workflow_role').del().whereIn('id', [3, 4]);
  await await knex('workflow_role').del().whereIn('id', [6, 7]);
  await knex('incominginvoice').del().whereIn('id', [50, 51, 52, 53]);
  await knex('usersupplierrole').del().whereIn('id', [9, 10]);
  await knex('user').del().whereIn('id', [9, 10]);
};

module.exports = {
  seedAll,
  rollbackAll,
};
